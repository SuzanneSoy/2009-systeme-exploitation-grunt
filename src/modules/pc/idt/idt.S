.section .text

.irp _ligne_1,0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f
.irp _ligne_2,0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f

.globl enregistrerContexteInterruption\_ligne_1\_ligne_2
enregistrerContexteInterruption\_ligne_1\_ligne_2:

/* Les noms de registres proviennent de :
 * x86-doc-vol3.pdf fig 6.2 (section 6.2.1) */
pushl %esp
pushl %ebp

pushl %edi
pushl %esi

pushl %eax
pushl %ebx
pushl %ecx
pushl %edx

subl $2,%esp
pushw %ds
pushw %es
pushw %fs
pushw %gs
pushw %ss

call *(tableGestionnairesInterruption + 4*0x\_ligne_1\_ligne_2)

popw %ss
popw %gs
popw %fs
popw %es
popw %ds
addl $2,%esp

popl %edx
popl %ecx
popl %ebx
popl %eax

popl %esi
popl %edi

popl %ebp
popl %esp

iret

.endr
.endr


.section .data

.globl tableEnregistreursContexteInterruption
tableEnregistreursContexteInterruption:
.irp _ligne_1,0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f
.irp _ligne_2,0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f
	.long (enregistrerContexteInterruption\_ligne_1\_ligne_2)
.endr
.endr

/* .globl tableEnregistreursContexteInterruption
   tableEnregistreursContexteInterruption:
   .long (_tableEnregistreursContexteInterruption) */

.globl tableGestionnairesInterruption
tableGestionnairesInterruption:
.irp _ligne_1,0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f
.irp _ligne_2,0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f
	.long (gestionnaireInterruptionVide)
.endr
.endr

/* .globl tableGestionnairesInterruption
   tableGestionnairesInterruption:
   .long (_tableGestionnairesInterruption) */
