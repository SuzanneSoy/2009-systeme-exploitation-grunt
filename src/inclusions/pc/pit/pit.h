#ifndef PC_PIT_PIT_H
#define PC_PIT_PIT_H

#define LIGNE_IRQ_PIT 0
#define PORT_PIT_CANAUX 0x40
#define PORT_PIT_CANAL_0 PORT_PIT_CANAUX + 0
#define PORT_PIT_CANAL_1 PORT_PIT_CANAUX + 1
#define PORT_PIT_CANAL_2 PORT_PIT_CANAUX + 2
#define PORT_PIT_COMMANDE 0x43

#define FREQUENCE_PIT_MILI_HZ 1193181667

typedef enum {
	PIT_CANAL_0 = 0,
	PIT_CANAL_1 = 1,
	PIT_CANAL_2 = 2,
	PIT_COMMANDE_LECTURE = 3,
} PitCanal;

typedef enum {
	PIT_COMMANDE_VERROU = 0,
	PIT_OCTET_BAS = 1,
	PIT_OCTET_HAUT = 2,
	PIT_OCTETS_HAUT_BAS = 3,
} PitModeAcces;

typedef enum {
	/* Mauvaises traductions... */
	PIT_MODE_INTERRUPTION_FIN_COMPTEUR = 0,
	PIT_MODE_UN_COUP_RE_ACTIVABLE = 1,
	PIT_MODE_GENERATEUR_FREQUENCE = 2,
	PIT_MODE_GENERATEUR_ONDE_CARREE = 3,
	PIT_MODE_SIGNAL_A_DECLENCHEMENT_LOGICIEL = 4,
	PIT_MODE_SIGNAL_A_DECLENCHEMENT_MATERIEL = 5,
} PitModeCanal;

typedef struct PitCommandeMode {
	bool bcd:1;
	PitModeCanal mode:3;
	PitModeAcces acces:2;
	PitCanal canal:2;
} PACKED PitCommandeMode;

typedef struct PitCommandeVerrou {
	PitCanal canal:2;
	uint8 zero:6;
} PitCommandeVerrou;

typedef struct PitCommandeLecture {
	uint8 un:2;
	bool nePasVerouillerCompteur:1;
	bool nePasVerouillerEtat:1;
	bool lectureCanal0:1;
	bool lectureCanal1:1;
	bool lectureCanal2:1;
	uint8 zero:1;
} PitCommandeLecture;

typedef struct PitEtatCanal {
	bool bcd:1;
	PitModeCanal mode:3;
	PitModeAcces acces:2;
	bool attenteCopieRechargeCompteur:1;
	bool etatSortie:1;
} PitEtatCanal;

typedef void (*GestionnairePit) ();

typedef struct EtatPit {
	PitModeCanal modeCanal0;
	PitModeCanal modeCanal1;
	PitModeCanal modeCanal2;
	PitModeAcces modeAcces;
	
	GestionnairePit gestionnairePit;
} EtatPit;

uint32 definirFrequenceCanal(uint32 freq, PitCanal canal);
uint32 definirDelaiCanal(uint32 delai, PitCanal canal);
void definirCompteurCanal(uint16 compteur, PitCanal canal);
void definirModeCanal(PitModeCanal mode, PitCanal canal);
void definirGestionnairePit(GestionnairePit gestionnairePit);

#endif
