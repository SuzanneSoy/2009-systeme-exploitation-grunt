#ifndef PC_GDT_GDT_H
#define PC_GDT_GDT_H

#include <types.h>

typedef enum {
	SEGMENT_DONNEES = 0,
	SEGMENT_CODE = 1
} TypeSegmentCodeDonnees;

typedef enum {
	DESCRIPTEUR_SEGMENT_SYSTEME = 0,
	DESCRIPTEUR_SEGMENT_CODE_DONNEES = 1
} TypeDescripteurSegment;

typedef enum {
	TAILLE_OPERATION_16 = 0,
	TAILLE_OPERATION_32 = 1
} TailleOperationSegment;

/* Union avec TailleOperationSegment */
typedef enum {
	LIMITE_HAUTE_64Ko = 0,
	LIMITE_HAUTE_4Go = 1
} LimiteHauteSegment;

typedef enum {
	GRANULARITE_1octet = 0,
	GRANULARITE_4Ko = 1
} GranulariteSegment;

/* x86-doc-vol3.pdf section 3.4.5, fig 3-8 */
typedef struct DescripteurSegment {
	uint16 limite_15_0;
	
	uint16 base_15_0;
	
	uint8 base_23_16;
	bool accede:1;
	bool lecture_ecriture:1;
	bool expansionBas_conforme:1;
	TypeSegmentCodeDonnees codeDonnees:1;
	
	TypeDescripteurSegment typeDescripteur:1;
	uint8 niveauPrivilegeDescripteur:2;
	bool  present:1;
	
	uint8 limite_19_16:4;
	uint8 _disponible:1;
	uint8 _reserve:1; /* Segment de code 64 bits (IA32 seulement) */
	TailleOperationSegment tailleOperation:1;
	/* union avec ci-dessus : LimiteHauteSegment limiteHaute:1; */
	GranulariteSegment granularite:1;
	uint8 base_31_24;
} PACKED ALIGNED(8) DescripteurSegment;

#define descripteurSegmentNULL { \
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 \
}

#define descripteurSegmentBasicFlatModel(_codeDonnees) \
	{ \
		.limite_15_0 = 0xFFFF, \
		.base_15_0 = 0x0000, \
		.base_23_16 = 0x00, \
		.accede = FALSE, \
		.lecture_ecriture = TRUE, \
		.expansionBas_conforme = FALSE, \
		.codeDonnees = _codeDonnees, \
		.typeDescripteur = DESCRIPTEUR_SEGMENT_CODE_DONNEES, \
		.niveauPrivilegeDescripteur = 0, \
		.present = 1, \
		.limite_19_16 = 0xF, \
		._disponible = 0, \
		._reserve = 0, \
		.tailleOperation = TAILLE_OPERATION_32, \
		.granularite = GRANULARITE_4Ko, \
		.base_31_24 = 0 \
	}


/* x86-doc-vol3.pdf section 2.4.1, fig 2.5 */
typedef struct RegistreGDTR {
	uint16 limite;
	DescripteurSegment* base;
} PACKED ALIGNED (4) RegistreGDTR;
/* TODO : VÃ©rifier le ALIGNED 4 :
 * x86-doc-vol3.pdf section 3.5.1, 2e page */


typedef struct EtatGdt {
	DescripteurSegment* tableDescripteursSegment;
	RegistreGDTR registreGDTR;
} EtatGdt;

#endif
