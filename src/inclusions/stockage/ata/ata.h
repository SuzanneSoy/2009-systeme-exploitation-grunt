#ifndef STOCKAGE_ATA_ATA_H
#define STOCKAGE_ATA_ATA_H

#define PORT_ATA                             0x1f0

#define PORT_ATA_DONNEES                     PORT_ATA + 0

#define PORT_ATA_ERREUR                      PORT_ATA + 1

#define PORT_ATA_NOMBRE_SECTEURS             PORT_ATA + 2

#define PORT_ATA_ADRESSE_PARTIELLE_SECTEUR   PORT_ATA + 3
#define PORT_ATA_ADRESSE_PARTIELLE_SECTEUR_1 PORT_ATA_ADRESSE_PARTIELLE_SECTEUR + 0
#define PORT_ATA_ADRESSE_PARTIELLE_SECTEUR_2 PORT_ATA_ADRESSE_PARTIELLE_SECTEUR + 1
#define PORT_ATA_ADRESSE_PARTIELLE_SECTEUR_3 PORT_ATA_ADRESSE_PARTIELLE_SECTEUR + 2


#define PORT_ATA_DIVERS                      PORT_ATA + 6
#define PORT_ATA_SELECTION_LECTEUR           PORT_ATA_DIVERS
#define PORT_ATA_DRAPEAUX                    PORT_ATA_DIVERS
#define PORT_ATA_FIN_ADRESSE_SECTEUR         PORT_ATA_DIVERS

#define PORT_ATA_COMMANDE_ETAT               PORT_ATA + 7
#define PORT_ATA_COMMANDE                    PORT_ATA_COMMANDE_ETAT
#define PORT_ATA_ETAT                        PORT_ATA_COMMANDE_ETAT

#define PORT_ATA_CONTROLE_ETAT_ALTERNATIF    0x3f6
#define PORT_ATA_CONTROLE                    PORT_ATA_CONTROLE_ETAT_ALTERNATIF
#define PORT_ATA_ETAT_ALTERNATIF             PORT_ATA_CONTROLE_ETAT_ALTERNATIF

typedef struct AtaOctetEtat {
	bool srv:1; /* TODO : traduire "Overlapped mode service request" */
	bool erreurDisque:1;
	bool pret:1;
	bool occupe:1;
	bool transfertPret:1;
	uint8 reserve:2;
	bool erreur;
} AtaOctetEtat;

typedef struct AtaControle {
	uint8 reserve_b:1;
	bool interruptions:1;
	bool reInitialisation:1;
	uint8 reserve_a:4;
	bool octetHaut:1;
} AtaControle;


typedef struct EtatAta {
} EtatAta;

#endif
