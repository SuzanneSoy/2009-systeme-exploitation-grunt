#ifndef INTERFACE_UTILISATEUR_CONSOLE_CONSOLE_H
#define INTERFACE_UTILISATEUR_CONSOLE_CONSOLE_H

#include <types.h>

typedef struct CouleurComposantes {
	uint8 bleu;
	uint8 vert;
	uint8 rouge;
	uint8 alpha;
} CouleurComposantes;

typedef uint32 Couleur;

typedef struct CouleurAvAr {
	Couleur av;
	Couleur ar;
} CouleurAvAr;

typedef struct Position {
	uint32 x;
	uint32 y;
} Position;

typedef void (*FonctionAffichage) (char caractere, uint32 couleurAv, uint32 couleurAr, uint32 x, uint32 y);

typedef struct Console {
	uint32 x;
	uint32 y;
	uint32 largeur;
	uint32 hauteur;
	FonctionAffichage fonctionAffichage;
} Console;

typedef struct EtatConsole {
	Console* consoleActive;
	uint32 x;
	uint32 y;
	uint32 couleurAv;
	uint32 couleurAr;
	bool consolePrete;
} EtatConsole;


Console* definirConsoleActive(Console* console);

CouleurAvAr getConsoleCouleur();
CouleurAvAr consoleCouleur(Couleur couleurAv, Couleur couleurAr);

Position getConsolePosition();
Position consolePosition(uint32 x, uint32 y);
void consolePositionAvancerX();
void consolePositionAvancerY();

void afficherCaractereCouleurPositionBrut(char caractere, uint32 couleurAv, uint32 couleurAr, uint32 x, uint32 y);
void afficherCaractereCouleurPosition(char caractere, uint32 couleurAv, uint32 couleurAr, uint32 x, uint32 y);
void afficherCaractere(char caractere);
void afficherCaractereBrut(char caractere);
void afficherCaractereCouleur(char caractere, uint32 couleurAv, uint32 couleurAr);
void afficherCaractereCouleurBrut(char caractere, uint32 couleurAv, uint32 couleurAr);
void afficherCaracterePosition(char caractere, uint32 x, uint32 y);
void afficherCaracterePositionBrut(char caractere, uint32 x, uint32 y);

void effacerConsole();
void afficherChaineZ(char* chaine);
void afficherChaine(char* chaine, int longueur);
void afficherEntierVirguleEnDecimal(uint32 entier, int32 nbDecimales);
void afficherEntierEnDecimal(uint32 entier);
void afficherEntierEnHexa(uint32 entier);
void afficherEntierEnBinaire(uint32 entier);
void afficherTableCaracteres();

bool consolePrete();

#define STR_Ccedil "\200"
#define STR_uuml   "\201"
#define STR_eacute "\202"
#define STR_acirc  "\203"
#define STR_auml   "\204"
#define STR_agrave "\205"
#define STR_aring  "\206"
#define STR_ccedil "\207"
#define STR_ecirc  "\210"
#define STR_euml   "\211"
#define STR_egrave "\212"
#define STR_iuml   "\213"
#define STR_icirc  "\214"
#define STR_igrave "\215"
#define STR_Auml   "\216"
#define STR_Aring  "\217"
#define STR_Eacute "\220"
#define STR_aelig  "\221"
#define STR_AElig  "\222"
#define STR_ocirc  "\223"
#define STR_ouml   "\224"
#define STR_ograve "\225"
#define STR_ucirc  "\226"
#define STR_ugrave "\227"
#define STR_yuml   "\230"
#define STR_Ouml   "\231"
#define STR_Uuml   "\232"
#define STR_cent   "\233"
#define STR_pound  "\234"
#define STR_yen    "\235"
#define STR_xxxxxxxx "\236"
#define STR_fonction "\237"
#define STR_aacute "\240"
#define STR_iacute "\241"
#define STR_oacute "\242"
#define STR_uacute "\243"
#define STR_ntilde "\244"
#define STR_Ntilde "\245"
#define STR_ordm   "\246"
#define STR_degr   "\247"

#endif
